/*
 * 
 * 
 *
 * 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.example.model;

import java.util.Objects;
import java.util.Arrays;
import com.example.model.CompositeFieldParam;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CompositeBodyParam
 */

@javax.annotation.Generated(value = "", date = "")
public class CompositeBodyParam {
  @SerializedName("primitive")
  private String primitive = null;

  @SerializedName("composite")
  private CompositeFieldParam composite = null;

  @SerializedName("primitiveList")
  private List<String> primitiveList = null;

  @SerializedName("compositeList")
  private List<CompositeFieldParam> compositeList = null;

  public CompositeBodyParam primitive(String primitive) {
    this.primitive = primitive;
    return this;
  }

   /**
   * Get primitive
   * @return primitive
  **/
  @Schema(description = "")
  public String getPrimitive() {
    return primitive;
  }

  public void setPrimitive(String primitive) {
    this.primitive = primitive;
  }

  public CompositeBodyParam composite(CompositeFieldParam composite) {
    this.composite = composite;
    return this;
  }

   /**
   * Get composite
   * @return composite
  **/
  @Schema(description = "")
  public CompositeFieldParam getComposite() {
    return composite;
  }

  public void setComposite(CompositeFieldParam composite) {
    this.composite = composite;
  }

  public CompositeBodyParam primitiveList(List<String> primitiveList) {
    this.primitiveList = primitiveList;
    return this;
  }

  public CompositeBodyParam addPrimitiveListItem(String primitiveListItem) {
    if (this.primitiveList == null) {
      this.primitiveList = new ArrayList<String>();
    }
    this.primitiveList.add(primitiveListItem);
    return this;
  }

   /**
   * Get primitiveList
   * @return primitiveList
  **/
  @Schema(description = "")
  public List<String> getPrimitiveList() {
    return primitiveList;
  }

  public void setPrimitiveList(List<String> primitiveList) {
    this.primitiveList = primitiveList;
  }

  public CompositeBodyParam compositeList(List<CompositeFieldParam> compositeList) {
    this.compositeList = compositeList;
    return this;
  }

  public CompositeBodyParam addCompositeListItem(CompositeFieldParam compositeListItem) {
    if (this.compositeList == null) {
      this.compositeList = new ArrayList<CompositeFieldParam>();
    }
    this.compositeList.add(compositeListItem);
    return this;
  }

   /**
   * Get compositeList
   * @return compositeList
  **/
  @Schema(description = "")
  public List<CompositeFieldParam> getCompositeList() {
    return compositeList;
  }

  public void setCompositeList(List<CompositeFieldParam> compositeList) {
    this.compositeList = compositeList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompositeBodyParam compositeBodyParam = (CompositeBodyParam) o;
    return Objects.equals(this.primitive, compositeBodyParam.primitive) &&
        Objects.equals(this.composite, compositeBodyParam.composite) &&
        Objects.equals(this.primitiveList, compositeBodyParam.primitiveList) &&
        Objects.equals(this.compositeList, compositeBodyParam.compositeList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(primitive, composite, primitiveList, compositeList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompositeBodyParam {\n");
    
    sb.append("    primitive: ").append(toIndentedString(primitive)).append("\n");
    sb.append("    composite: ").append(toIndentedString(composite)).append("\n");
    sb.append("    primitiveList: ").append(toIndentedString(primitiveList)).append("\n");
    sb.append("    compositeList: ").append(toIndentedString(compositeList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
